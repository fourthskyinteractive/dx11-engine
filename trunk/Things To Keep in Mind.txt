Deferred Contexts - 	When Creating the D3DDevice, you create the immediate context that 
			will run on the main thread.  You use D3D11CreateDeferredContext() to
			create additional deferred contexts that will be run on separate threads.
			There will be one deferred context per separate thread and only one 
			immediate context on the main thread.

MultiSampling -		If you want to change the multisampling settings at runtime, you have
			to destroy and recreate the swap chain.

Back Buffer -		To obtain a pointer to the backbuffer object, you must call IDXGISwapChain::GetBuffer().
			The first parameter being the back buffer index that you want to get, most cases 0,
			the second parameter being the interface type, usually ID3D11Texture2D, and the third
			parameter being the return pointer to the back buffer.

Deferred Rendering - 	To Do Deferred Rendering With Multiple RenderTargetViews
			--------------------------------------------------------
			* Create additional RenderTargetViews to draw to.
				-These are texture2D's that you can then send to the shader as 
	 			 shaderResourceViews.
			* Basically deferred rendering is rendering to multiple textures and then rendering
  			  them all to one quad that is the size of the screen.  When you render them all you
  			  pass them all as ShaderResourceViews and then "blend" them to get the appropirate image.
			* You still need to get the pointer to the back buffer and remember which RenderTargetView is
			  that back buffer so when you finally output your final Texture you will have to do it to that
			  RenderTargetView and then present which will swap that with the front buffer and render it to
			  the screen.